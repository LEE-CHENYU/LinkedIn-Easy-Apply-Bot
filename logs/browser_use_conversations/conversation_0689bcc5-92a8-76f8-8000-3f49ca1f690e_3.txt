 system 
You are an AI agent designed to operate in an iterative loop to automate browser tasks. Your ultimate goal is accomplishing the task provided in <user_request>.

<intro>
You excel at following tasks:
1. Navigating complex websites and extracting precise information
2. Automating form submissions and interactive web actions
3. Gathering and saving information 
4. Using your filesystem effectively to decide what to keep in your context
5. Operate effectively in an agent loop
6. Efficiently performing diverse web tasks
</intro>

<language_settings>
- Default working language: **English**
- Use the language specified by user in messages as the working language
</language_settings>

<input>
At every step, your input will consist of: 
1. <agent_history>: A chronological event stream including your previous actions and their results.
2. <agent_state>: Current <user_request>, summary of <file_system>, <todo_contents>, and <step_info>.
3. <browser_state>: Current URL, open tabs, interactive elements indexed for actions, and visible page content.
4. <browser_vision>: Screenshot of the browser with bounding boxes around interactive elements.
5. <read_state> This will be displayed only if your previous action was extract_structured_data or read_file. This data is only shown in the current step.
</input>

<agent_history>
Agent history will be given as a list of step information as follows:

<step_{step_number}>:
Evaluation of Previous Step: Assessment of last action
Memory: Your memory of this step
Next Goal: Your goal for this step
Action Results: Your actions and their results
</step_{step_number}>

and system messages wrapped in <sys> tag.
</agent_history>

<user_request>
USER REQUEST: This is your ultimate objective and always remains visible.
- This has the highest priority. Make the user happy.
- If the user request is very specific - then carefully follow each step and dont skip or hallucinate steps.
- If the task is open ended you can plan yourself how to get it done.
</user_request>

<browser_state>
1. Browser State will be given as:

Current URL: URL of the page you are currently viewing.
Open Tabs: Open tabs with their indexes.
Interactive Elements: All interactive elements will be provided in format as [index]<type>text</type> where
- index: Numeric identifier for interaction
- type: HTML element type (button, input, etc.)
- text: Element description

Examples:
[33]<div>User form</div>
\t*[35]<button aria-label='Submit form'>Submit</button>

Note that:
- Only elements with numeric indexes in [] are interactive
- (stacked) indentation (with \t) is important and means that the element is a (html) child of the element above (with a lower index)
- Elements tagged with `*[` are the new clickable elements that appeared on the website since the last step - if url has not changed.
- Pure text elements without [] are not interactive.
</browser_state>

<browser_vision>
You will be optionally provided with a screenshot of the browser with bounding boxes. This is your GROUND TRUTH: reason about the image in your thinking to evaluate your progress.
Bounding box labels correspond to element indexes - analyze the image to make sure you click on correct elements.
</browser_vision>

<browser_rules>
Strictly follow these rules while using the browser and navigating the web:
- Only interact with elements that have a numeric [index] assigned.
- Only use indexes that are explicitly provided.
- If research is needed, open a **new tab** instead of reusing the current one.
- If the page changes after, for example, an input text action, analyse if you need to interact with new elements, e.g. selecting the right option from the list.
- By default, only elements in the visible viewport are listed. Use scrolling tools if you suspect relevant content is offscreen which you need to interact with. Scroll ONLY if there are more pixels below or above the page. The extract_structured_data action gets the full loaded page content.
- You can scroll by a specific number of pages using the num_pages parameter (e.g., 0.5 for half page, 2.0 for two pages).
- If a captcha appears, attempt solving it if possible. If not, use fallback strategies (e.g., alternative site, backtrack).
- If expected elements are missing, try refreshing, scrolling, or navigating back.
- If the page is not fully loaded, use the wait action.
- You can call extract_structured_data on specific pages to gather structured semantic information from the entire page, including parts not currently visible. The results of extract_structured_data are automatically saved to the file system.
- Call extract_structured_data only if the information you are looking for is not visible in your <browser_state> otherwise always just use the needed text from the <browser_state>.
- If you fill an input field and your action sequence is interrupted, most often something changed e.g. suggestions popped up under the field.
- If the <user_request> includes specific page information such as product type, rating, price, location, etc., try to apply filters to be more efficient.
- The <user_request> is the ultimate goal. If the user specifies explicit steps, they have always the highest priority.
- If you input_text into a field, you might need to press enter, click the search button, or select from dropdown for completion.
- Don't login into a page if you don't have to. Don't login if you don't have the credentials. 
- There are 2 types of tasks always first think which type of request you are dealing with:
1. Very specific step by step instructions:
- Follow them as very precise and don't skip steps. Try to complete everything as requested.
2. Open ended tasks. Plan yourself, be creative in achieving them.
- If you get stuck e.g. with logins or captcha in open-ended tasks you can re-evaluate the task and try alternative ways, e.g. sometimes accidentally login pops up, even though there some part of the page is accessible or you get some information via web search.
- If you reach a PDF viewer, the file is automatically downloaded and you can see its path in <available_file_paths>. You can either read the file or scroll in the page to see more.
</browser_rules>

<file_system>
- You have access to a persistent file system which you can use to track progress, store results, and manage long tasks.
- Your file system is initialized with a `todo.md`: Use this to keep a checklist for known subtasks. Use `replace_file_str` tool to update markers in `todo.md` as first action whenever you complete an item. This file should guide your step-by-step execution when you have a long running task.
- If you are writing a `csv` file, make sure to use double quotes if cell elements contain commas.
- If the file is too large, you are only given a preview of your file. Use `read_file` to see the full content if necessary.
- If exists, <available_file_paths> includes files you have downloaded or uploaded by the user. You can only read or upload these files but you don't have write access.
- If the task is really long, initialize a `results.md` file to accumulate your results.
- DO NOT use the file system if the task is less than 10 steps!
</file_system>

<task_completion_rules>
You must call the `done` action in one of two cases:
- When you have fully completed the USER REQUEST.
- When you reach the final allowed step (`max_steps`), even if the task is incomplete.
- If it is ABSOLUTELY IMPOSSIBLE to continue.

The `done` action is your opportunity to terminate and share your findings with the user.
- Set `success` to `true` only if the full USER REQUEST has been completed with no missing components.
- If any part of the request is missing, incomplete, or uncertain, set `success` to `false`.
- You can use the `text` field of the `done` action to communicate your findings and `files_to_display` to send file attachments to the user, e.g. `["results.md"]`.
- Combine `text` and `files_to_display` to provide a coherent reply to the user and fulfill the USER REQUEST.
- You are ONLY ALLOWED to call `done` as a single action. Don't call it together with other actions.
- If the user asks for specified format, such as "return JSON with following structure", "return a list of format...", MAKE sure to use the right format in your answer.
- If the user asks for a structured output, your `done` action's schema will be modified. Take this schema into account when solving the task!
</task_completion_rules>

<action_rules>
- You are allowed to use a maximum of 10 actions per step.

If you are allowed multiple actions, you can specify multiple actions in the list to be executed sequentially (one after another).
- If the page changes after an action, the sequence is interrupted and you get the new state. You can see this in your agent history when this happens.
</action_rules>


<efficiency_guidelines>
**IMPORTANT: Be More Efficient with Multi-Action Outputs**

Maximize efficiency by combining related actions in one step instead of doing them separately:

**Highly Recommended Action Combinations:**
- `click_element_by_index` + `extract_structured_data` → Click element and immediately extract information 
- `go_to_url` + `extract_structured_data` → Navigate and extract data in one step
- `input_text` + `click_element_by_index` → Fill form field and submit/search in one step
- `click_element_by_index` + `input_text` → Click input field and fill it immediately
- `click_element_by_index` + `click_element_by_index` → Navigate through multi-step flows (when safe)
- File operations + browser actions 

**Examples of Efficient Combinations:**
```json
"action": [
  {"click_element_by_index": {"index": 15}},
  {"extract_structured_data": {"query": "Extract the first 3 headlines", "extract_links": false}}
]
```

```json
"action": [
  {"input_text": {"index": 23, "text": "laptop"}},
  {"click_element_by_index": {"index": 24}}
]
```

```json
"action": [
  {"go_to_url": {"url": "https://example.com/search"}},
  {"extract_structured_data": {"query": "product listings", "extract_links": false}}
]
```

**When to Use Single Actions:**
- When next action depends on previous action's specific result


**Efficiency Mindset:** Think "What's the logical sequence of actions I would do?" and group them together when safe.
</efficiency_guidelines>

<reasoning_rules>
You must reason explicitly and systematically at every step in your `thinking` block. 

Exhibit the following reasoning patterns to successfully achieve the <user_request>:
- Reason about <agent_history> to track progress and context toward <user_request>.
- Analyze the most recent "Next Goal" and "Action Result" in <agent_history> and clearly state what you previously tried to achieve.
- Analyze all relevant items in <agent_history>, <browser_state>, <read_state>, <file_system>, <read_state> and the screenshot to understand your state.
- Explicitly judge success/failure/uncertainty of the last action.
- If todo.md is empty and the task is multi-step, generate a stepwise plan in todo.md using file tools.
- Analyze `todo.md` to guide and track your progress. 
- If any todo.md items are finished, mark them as complete in the file.
- Analyze whether you are stuck, e.g. when you repeat the same actions multiple times without any progress. Then consider alternative approaches e.g. scrolling for more context or send_keys to interact with keys directly or different pages.
- Analyze the <read_state> where one-time information are displayed due to your previous action. Reason about whether you want to keep this information in memory and plan writing them into a file if applicable using the file tools.
- If you see information relevant to <user_request>, plan saving the information into a file.
- Before writing data into a file, analyze the <file_system> and check if the file already has some content to avoid overwriting.
- Decide what concise, actionable context should be stored in memory to inform future reasoning.
- When ready to finish, state you are preparing to call done and communicate completion/results to the user.
- Before done, use read_file to verify file contents intended for user output.
- Always reason about the <user_request>. Make sure to carefully analyze the specific steps and information required. E.g. specific filters, specific form fields, specific information to search. Make sure to always compare the current trajactory with the user request and think carefully if thats how the user requested it.
</reasoning_rules>

<examples>
Here are examples of good output patterns. Use them as reference but never copy them directly.

<todo_examples>
  "write_file": {
    "file_name": "todo.md",
    "content": "# ArXiv CS.AI Recent Papers Collection Task\n\n## Goal: Collect metadata for 20 most recent papers\n\n## Tasks:\n- [ ] Navigate to https://arxiv.org/list/cs.AI/recent\n- [ ] Initialize papers.md file for storing paper data\n- [ ] Collect paper 1/20: The Automated LLM Speedrunning Benchmark\n- [x] Collect paper 2/20: AI Model Passport\n- [ ] Collect paper 3/20: Embodied AI Agents\n- [ ] Collect paper 4/20: Conceptual Topic Aggregation\n- [ ] Collect paper 5/20: Artificial Intelligent Disobedience\n- [ ] Continue collecting remaining papers from current page\n- [ ] Navigate through subsequent pages if needed\n- [ ] Continue until 20 papers are collected\n- [ ] Verify all 20 papers have complete metadata\n- [ ] Final review and completion"
  }
</todo_examples>

<evaluation_examples>
- Positive Examples:
"evaluation_previous_goal": "Successfully navigated to the product page and found the target information. Verdict: Success"
"evaluation_previous_goal": "Clicked the login button and user authentication form appeared. Verdict: Success"
- Negative Examples:
"evaluation_previous_goal": "Failed to input text into the search bar as I cannot see it in the image. Verdict: Failure"
"evaluation_previous_goal": "Clicked the submit button with index 15 but the form was not submitted successfully. Verdict: Failure"
</evaluation_examples>

<memory_examples>
"memory": "Visited 2 of 5 target websites. Collected pricing data from Amazon ($39.99) and eBay ($42.00). Still need to check Walmart, Target, and Best Buy for the laptop comparison."
"memory": "Found many pending reports that need to be analyzed in the main page. Successfully processed the first 2 reports on quarterly sales data and moving on to inventory analysis and customer feedback reports."
</memory_examples>

<next_goal_examples>
"next_goal": "Click on the 'Add to Cart' button (index 23) to proceed with the purchase flow."
"next_goal": "Scroll down to find more product listings and extract details from the next 5 items on the page."
</next_goal_examples>
</examples>

<output>
You must ALWAYS respond with a valid JSON in this exact format:

{
  "thinking": "A structured <think>-style reasoning block that applies the <reasoning_rules> provided above.",
  "evaluation_previous_goal": "One-sentence analysis of your last action. Clearly state success, failure, or uncertain.",
  "memory": "1-3 sentences of specific memory of this step and overall progress. You should put here everything that will help you track progress in future steps. Like counting pages visited, items found, etc.",
  "next_goal": "State the next immediate goals and actions to achieve it, in one clear sentence."
  "action":[{"one_action_name": {// action-specific parameter}}, // ... more actions in sequence]
}

Action list should NEVER be empty.
</output>


 user 
<agent_history>
<sys>
Agent initialized
</sys>
<step_1>
Evaluation of Previous Step: Initialized and ready to locate the job listing for application.
Memory: Starting the LinkedIn job application process for Business Consultant in Brooklyn, NY. Need to find the correct job listing first.
Next Goal: Scroll through the job listings to find 'Business Consultant - Brooklyn, NY - Mandarin' and click 'Apply' if available.
Action Results:
Action 1/1: Scrolled down the page by one page
</step_1>
<step_2>
Evaluation of Previous Step: Scrolled down the page but did not find the specific job listing yet. Verdict: Uncertain.
Memory: Currently searching for the job listing 'Business Consultant - Brooklyn, NY - Mandarin'. No match found yet in the visible listings.
Next Goal: Scroll down further to reveal more job listings and search for 'Business Consultant - Brooklyn, NY - Mandarin'.
Action Results:
Action 1/1: Scrolled down the page by one page
</step_2>
</agent_history>
<agent_state>
<user_request>
You are helping fill out a LinkedIn job application for Business Consultant - Brooklyn, NY - Mandarin at Unknown. Please follow these guidelines:

PERSONAL INFORMATION:
- First Name: Chenyu
- Last Name: Li
- Phone: 9295388280
- Email: Use any existing email field values
- Address: 601 W 110th St
- City: New York, New York
- State: New York
- ZIP: 10025
- LinkedIn: linkedin.com/in/chenyu-li-50a81b156
- Website: https://github.com/LEE-CHENYU

WORK AUTHORIZATION:
- Legally authorized to work in US: Yes
- Require visa sponsorship: No
- Have driver's license: Yes
- Can start immediately: Yes
- Comfortable commuting: Yes
- Background check: Yes

EDUCATION:
- GPA: 3.7
- Completed degrees: High School Diploma, Bachelor's Degree, Master's Degree

EXPERIENCE (in years):
Technology Skills: {'python': 5, 'default': 1}
Industry Experience: {'Accounting/Auditing': 1, 'Administrative': 0, 'Advertising': 0, 'Analyst': 1, 'Art/Creative': 0}
Default experience for unlisted skills: 1 years

LANGUAGES:
{'english': 'Professional', 'chinese': 'Native or bilingual', 'japanese': 'Professional'}

IMPORTANT RULES:
1. For "years of experience" questions, match the technology/skill mentioned to the values above
2. For yes/no questions, use the work authorization values above
3. For dropdown selections, choose the most appropriate option based on the context
4. For text fields without specific matches, use reasonable defaults
5. For file uploads, skip them (they should be handled separately)
6. For EEO questions (gender, race, veteran status), select "Prefer not to answer" or "Decline to answer"
7. Always click "Continue" or "Next" buttons to proceed through the form
8. If you encounter "Submit Application", only click it if all required fields are properly filled

CRITICAL BUTTON DETECTION:
9. ALWAYS scroll down to the bottom of the page to check for Next/Continue/Submit/Review buttons
10. Many LinkedIn forms have buttons stuck at the bottom that are not visible without scrolling
11. Before looking for buttons, scroll to the bottom of the page first, then scroll back up if needed
12. If you cannot find Next/Continue buttons, scroll down completely and look again
13. Look for buttons with text like: "Next", "Continue", "Review", "Submit Application", "Review your application"

SCROLLING INSTRUCTIONS:
- Always scroll down to reveal hidden form elements and buttons
- Some forms have multiple sections that only become visible after scrolling
- Check both top and bottom of the page for navigation buttons
- If stuck, try scrolling to reveal more content or buttons

Please fill out this LinkedIn job application form step by step, following these instructions carefully.
</user_request>
<file_system>

</file_system>
<todo_contents>
[Current todo.md is empty, fill it with your plan when applicable]
</todo_contents>
<step_info>
Step 3 of 15 max possible steps
Current date and time: 2025-08-12 19:21
</step_info>
</agent_state>
<browser_state>
Current tab: 0
Available tabs:
Tab 0: https://www.linkedin.com/jobs/search/?currentJobId=4253818154&distance=100&f_E=2%2C3&f_JT=F%2CP&f_TPR=r2592000&keywords=Strategist&location=New%20York&origin=JOB_SEARCH_PAGE_JOB_FILTER - (4) Strategist Jobs in New Yor

Page info: 1920x1080px viewport, 1920x1080px total page size, 0.0 pages above, 0.0 pages below, 1.0 total pages, at 0% of page
Interactive elements from top layer of the current page inside the viewport:
[Start of page]
[0]<a  />
	[1]<div  />
		[2]<div  />
[3]<label >Search by title, skill, or company />
[4]<input role=combobox aria-label=Search by title... aria-expanded=false type=text />
[5]<label >City, state, or zip code />
[6]<input role=combobox aria-label=City, state, or... aria-expanded=false type=text />
[7]<button type=button>Search />
[8]<a >Home />
	[9]<div  />
		[10]<span >new feed updates notifications />
		[11]<div  />
			[12]<div  />
[13]<a >My Network />
	[14]<div  />
		[15]<div  />
[16]<a >Jobs />
	[17]<div  />
		[18]<div  />
[19]<a >Messaging />
	[20]<div  />
		[21]<div  />
[22]<a >Notifications />
	[23]<div  />
		[24]<span >4
4 new notifications />
		[25]<div  />
			[26]<div  />
[27]<button aria-expanded=false type=button>Me />
[28]<button aria-expanded=false type=button>For Business />
	[29]<div  />
		[30]<div  />
[31]<a >Learning />
	[32]<div  />
		[33]<div  />
[34]<div  />
	[35]<button aria-expanded=false aria-label=Filter by: Jobs type=button>Jobs />
[36]<button aria-expanded=false aria-label=Date posted fil... type=button>Past month />
[37]<button aria-expanded=false aria-label=Experience leve... type=button>Experience level
2 />
[38]<button aria-expanded=false aria-label=Job type filter... type=button>Job type
2 />
[39]<button aria-expanded=false aria-label=Salary filter. ... type=button>Salary />
[40]<button aria-label=Show all filter... type=button>All filters />
[41]<button aria-label=Reset applied f... type=button>Reset />
[42]<button >Try the new job search />
Strategist in New York, United States
542 results
[43]<div >Set alert
Set job alert for Strategist in New York />
[44]<div >Pandora
New York, NY (Hybrid)
$65K/yr - $80K/yr
3 school alumni work here
3 Columbia University school alumni work here
Viewed
Promoted />
	[45]<a >Analyst, Podcast Content Strategy with verification />
		[46]<span >Analyst, Podcast Content Strategy />
	[47]<button aria-label=Dismiss Analyst... type=button />
		[48]<span  />
[49]<div >Reference Point
New York, NY (Hybrid)
$90K/yr - $120K/yr · 401(k), Medical, +2 benefits
Actively reviewing applicants
Viewed
Promoted
Easy Apply />
	[50]<a >Consultant - Strategy and Digital / Technology with verification />
		[51]<span >Consultant - Strategy and Digital / Technology />
	[52]<button aria-label=Dismiss Consult... type=button />
		[53]<span  />
[54]<div >MrBeast
New York, NY (Hybrid)
Promoted />
	[55]<a >Corporate Development & Strategy - Associate with verification />
		[56]<span >Corporate Development & Strategy - Associate />
	[57]<button aria-label=Dismiss Corpora... type=button />
		[58]<span  />
[59]<div >RepRally
New York, NY (On-site)
$70K/yr - $100K/yr + Stock options, Commission · Vision, +3 benefits
Actively reviewing applicants
Promoted
Easy Apply />
	[60]<a >Growth Associate />
		[61]<span >Growth Associate />
	[62]<button aria-label=Dismiss Growth ... type=button />
		[63]<span  />
[64]<div >LinkedIn
New York, NY (Hybrid)
$84K/yr - $137K/yr
Actively reviewing applicants
Promoted
Easy Apply />
	[65]<a >Go-to-Market Growth Strategy & Operations Associate, LinkedIn Marketing Solutions with verification />
		[66]<span >Go-to-Market Growth Strategy & Operations Associate, LinkedIn Marketing Solutions />
	[67]<button aria-label=Dismiss Go-to-M... type=button />
		[68]<span  />
[69]<div >CARDO AI
New York, United States (Hybrid)
401(k), +4 benefits
Actively reviewing applicants
Viewed
Promoted
Easy Apply />
	[70]<a >Founder's Associate – Strategy & GTM with verification />
		[71]<span >Founder's Associate – Strategy & GTM />
	[72]<button aria-label=Dismiss Founder... type=button />
		[73]<span  />
[74]<div >Growth Strategy & Operations
Growth Strategy & Operations
Autopilot
New York, NY (On-site)
$100K/yr - $130K/yr + Bonus, Stock options · 4 benefits
Actively reviewing applicants
Viewed
Promoted
Easy Apply />
*[75]<a >Analyst, Podcast Content Strategy />
Pandora · New York, NY (Hybrid)
[76]<button role=link aria-label=Apply to Analys...>Apply />
[77]<button aria-expanded=false type=button>Save
Save Analyst, Podcast Content Strategy   at Pandora />
[78]<div  />
	*[79]<button aria-expanded=false type=button>Show more options />
SiriusXM and its brands (Pandora, SiriusXM Media, AdsWizz, Simplecast, and SiriusXM Connect) are leading a new era of audio entertainment and services by delivering the most compelling subscription and ad-supported audio entertainment experience for listeners -- in the car, at home, and anywhere on the go with connected devices. Our vision is to shape the future of audio, where everyone can be effortlessly connected to the voices, stories and music they love wherever they are.
This is the place where a diverse group of emerging talent and legends alike come to share authentic and purposeful songs, stories, sounds and insights through some of the best programming and technology in the world. Our critically-acclaimed, industry-leading audio entertainment encompasses music, sports, comedy, news, talk, live events, and podcasting. No matter their individual role, each of our employees plays a vital part in bringing SiriusXM’s vision to life every day.
SiriusXM is the leading audio entertainment company in North America, and the premier programmer and platform for subscription and digital advertising-supported audio products. SiriusXM’s platforms collectively reach approximately 150 million listeners, the largest digital audio audience across paid and free tiers in North America, and deliver music, sports, talk, news, comedy, entertainment and podcasts. Pandora, a subsidiary of SiriusXM, is the largest ad-supported audio entertainment streaming service in the U.S. SiriusXM's subsidiaries Simplecast and AdsWizz make it a leader in podcast hosting, production, distribution, analytics and monetization. The Company’s advertising sales organization, which operates as SiriusXM Media, leverages its scale, cross-platform sales organization and ad tech capabilities to deliver results for audio creators and advertisers. SiriusXM, through SiriusXM Canada Holdings, Inc., also offers satellite radio and audio entertainment in Canada. In addition to its audio entertainment businesses, SiriusXM offers connected vehicle services to automakers.
As an
you will play a critical role in supporting the growth and expansion of our podcast business. This role will help drive audience and revenue growth by delivering strategic insights and recommendations for our podcast partners and internal teams. You will act as a key bridge between data and strategy, helping partners understand audience behavior, identify growth opportunities, and optimize performance. You will support deal evaluations, assist with financial modelling, and ensure accurate KPI tracking and reporting for podcast portfolio.
2+ years of financial modeling experience, with a strong ability to analyze data and provide actionable insights. Experience in investment banking, management consulting, or media industry preferred.
Bachelor’s Degree in Business, Finance, Economics, or equivalent work experience.
Proficiency in Google Suite and Microsoft Office, particularly Excel (e.g., pivot tables, formulas, modeling).
Strong communication and presentation skills to effectively convey data and strategy.
Excellent organizational skills with the ability to manage multiple projects and meet deadlines in a fast-paced environment.
A collaborative mindset and ability to work effectively with cross-functional teams.
Familiarity with data visualization tools (e.g., Tableau, Power BI) and SQL is a plus.
Must have legal right to work in the U.S.
At SiriusXM, we carefully consider a wide range of factors when determining compensation, including your background and experience. These considerations can cause your compensation to vary. We expect the base salary for this position to be in the range of $65,000 to $80,000 and will depend on your skills, qualifications, and experience. Additionally, this role might be eligible for discretionary short-term and long-term incentives. We encourage all interested candidates to apply.
Our goal at SiriusXM is to provide and maintain a work environment that fosters mutual respect, professionalism and cooperation. SiriusXM is an equal opportunity employer that does not discriminate on the basis of actual or perceived race, creed, color, religion, national origin, ancestry, alienage or citizenship status, age, disability or handicap, sex, gender identity, marital status, familial status, veteran status, sexual orientation or any other characteristic protected by applicable federal, state or local laws.
The requirements and duties described above may be modified or waived by the Company in its sole discretion without notice.
R-2025-05-9
*[80]<button aria-expanded=false aria-label=Learn more abou... type=button />
See how you compare to others who clicked apply
Candidates who clicked apply
601
total
16
in the past day
[81]<div >Status is offline />
	[82]<button type=button />
		[83]<span >Messaging
You are on the messaging overlay. Press enter to open the list of conversations. />
[84]<div  />
	[85]<button aria-expanded=false type=button />
[86]<button >Compose message />
[87]<button >You are on the messaging overlay. Press enter to open the list of conversations. />
[End of page]
</browser_state>

Current screenshot:

 RESPONSE
{
  "thinking": "The job listing 'Business Consultant - Brooklyn, NY - Mandarin' is not visible in the current viewport. I need to continue scrolling to find it. The page contains multiple job listings, but none match the specific title required. I will scroll further to reveal more listings.",
  "evaluation_previous_goal": "Scrolled down the page but did not find the specific job listing yet. Verdict: Uncertain.",
  "memory": "Still searching for 'Business Consultant - Brooklyn, NY - Mandarin'. No match found in the visible listings yet.",
  "next_goal": "Scroll down further to reveal more job listings and search for 'Business Consultant - Brooklyn, NY - Mandarin'.",
  "action": [
    {
      "scroll": {
        "down": true,
        "num_pages": 1.0,
        "index": null
      }
    }
  ]
}